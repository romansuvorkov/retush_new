{"version":3,"sources":["img/example1b.jpg","img/example1a.jpg","components/InfoCards.jsx","components/HowTo.jsx","functions/useSizeFunction.jsx","components/ExampleImageNew.jsx","components/Examples.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","infoCards","HowTo","useState","activeHowToCard","setActiveSlide","handleClick","numb","newActiveHowToCard","className","onClick","useSizeFunction","myRef","getDimensions","width","current","offsetWidth","height","offsetHeight","dimensions","setDimensions","useEffect","ExampleImage","componentRef","useRef","center","interfacePosition","setInterfacePosition","activeMoving","setActiveMoving","clipWidth","setClipWidth","onTouchEnd","e","onTouchMove","rect","getBoundingClientRect","cursorPosition","touches","clientX","left","console","log","ref","src","example1a","alt","style","example1b","onTouchStart","Examples","ExampleImageNew","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee55fda5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/example1b.916b130a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example1a.1d000984.jpg\";","import React from 'react';\r\n\r\nfunction infoCards() {\r\n  return (\r\n    <div className=\"info_cards\">\r\n      <div className=\"info_cards_wrapper\">\r\n        <div className=\"info_card\">\r\n          <div className=\"right\">\r\n            <span className=\"info_card_text\">Готовность в течение 5 рабочих дней</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"info_card\">\r\n          <div className=\"right\">\r\n            <span className=\"info_card_text\">Оплата по факту готовности</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"info_card\">\r\n          <div className=\"right\">\r\n              <span className=\"info_card_text\">Опыт работы более 8 лет</span> \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default infoCards;","import React, { useState } from 'react';\r\n\r\n\r\nfunction HowTo() {\r\n\r\n    const [activeHowToCard, setActiveSlide] = useState(1);\r\n\r\n    const handleClick = (numb) => {\r\n        const newActiveHowToCard = activeHowToCard + numb;\r\n        if (newActiveHowToCard < 1) {\r\n            setActiveSlide(1);\r\n        } else if (newActiveHowToCard > 3) {\r\n            setActiveSlide(3);\r\n        } else {\r\n            setActiveSlide(newActiveHowToCard);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"how_to_wraper\">\r\n            <div className={activeHowToCard === 1 ? \"how_to_card how_to_card_active\" : \"how_to_card display_none\"}>\r\n                <div className=\"text\">\r\n                    <h3 className=\"instructions_card_header\">Подготовить фотографию</h3>\r\n                    <div className=\"instructions_card_text_wrapper\">\r\n                    <p className=\"instructions_card_text\">Размер лица на фото и необходимое разрешение:</p>\r\n                    <ul>\r\n                        <li className=\"instructions_card_text\">1см - 1200px/дюйм</li>\r\n                        <li className=\"instructions_card_text\">2см - 800px/дюйм</li>\r\n                        <li className=\"instructions_card_text\">3см-5см - 1200px/дюйм</li>\r\n                        <li className=\"instructions_card_text\">10см и более - 1200px/дюйм</li>\r\n                    </ul>\r\n                    <p className=\"instructions_card_text\">Чем ниже качество фото, тем выше разрешение при сканировании</p>\r\n                    <p className=\"instructions_card_text\">Для фотографий с тиснением необходимо сделать 4 скана, каждый раз разворачивая фотографию на 90 градусов</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={activeHowToCard === 2 ? \"how_to_card how_to_card_active\" : \"how_to_card display_none\"}>\r\n                <div className=\"text\">\r\n                <h3 className=\"instructions_card_header\">Подробно описать заказ</h3>\r\n                <div className=\"instructions_card_text_wrapper\">\r\n                    <p className=\"instructions_card_text\">Подготовить подробное описание заказа. Если необходимо сделать корректировку изображения - подробно расписать что нужно сделать.</p>\r\n                    <p className=\"instructions_card_text\">Для замены одежды приложить макет, либо прописать пожелания и мы используем свой макет</p>\r\n                    <p className=\"instructions_card_text\">Для срочного заказа сообщить желаемый срок изготовления и на номер +777777777777 отправить сообщение используя Viber или Whatsapp</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className={activeHowToCard === 3 ? \"how_to_card how_to_card_active\" : \"how_to_card display_none\"}>\r\n                <div className=\"text\">\r\n                <h3 className=\"instructions_card_header\">Отправить заявку</h3>\r\n                <div className=\"instructions_card_text_wrapper\">\r\n                    <p className=\"instructions_card_text\">Отправить заявку с описанием заказа на почту @yandex.ru</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"how_to_interface\">\r\n                <div className=\"how_to_left\" onClick={() => handleClick(-1)}>&#10094;</div>\r\n                <div className=\"how_to_right\" onClick={() => handleClick(1)}>&#10095;</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HowTo;","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useSizeFunction(myRef) {\r\n    const getDimensions = () => ({\r\n      width: myRef.current.offsetWidth,\r\n      height: myRef.current.offsetHeight,\r\n    })\r\n\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0});\r\n  \r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setDimensions(getDimensions());\r\n      }\r\n  \r\n      if (myRef.current) {\r\n        setDimensions(getDimensions());\r\n      }\r\n  \r\n      // window.addEventListener(\"resize\", handleResize);\r\n      // console.log('work123123');\r\n  \r\n      return () => {\r\n        // window.removeEventListener(\"resize\", handleResize);\r\n      }\r\n    }, \r\n    [myRef]\r\n    )\r\n    // console.log('working');\r\n    return dimensions;\r\n};\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport example1b from '../img/example1b.jpg';\r\nimport example1a from '../img/example1a.jpg';\r\nimport useSizeFunction from '../functions/useSizeFunction';\r\n\r\nfunction ExampleImage() {\r\n\r\n    // useEffect(() => {\r\n        // const componentRef = useRef();\r\n        // const { width, height } = useSizeFunction(componentRef);\r\n        // const [clipset, setClip] = useState(width);\r\n        // const [interfacePosition, setInterfacePosition] = useState(\"50%\");\r\n    // })\r\n\r\n    const componentRef = useRef();\r\n    const { width, height, center } = useSizeFunction(componentRef);\r\n    const [interfacePosition, setInterfacePosition] = useState(false);\r\n    const [activeMoving, setActiveMoving] = useState(false);\r\n    const [clipWidth, setClipWidth] = useState(false);\r\n\r\n    const handleTouchStart = (e) => {\r\n        // console.log(e.touches[0].clientX);\r\n        // e.preventDefault();\r\n        setActiveMoving(true);\r\n    }\r\n\r\n    \r\n    const handleTouchEnd = (e) => {\r\n        // e.preventDefault();\r\n        setActiveMoving(false);\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        if(activeMoving) {\r\n            // e.preventDefault();\r\n            const rect = componentRef.current.getBoundingClientRect();\r\n            const cursorPosition = e.touches[0].clientX - rect.left;\r\n            // center = cursorPosition;\r\n            if (cursorPosition < 1) {\r\n                setInterfacePosition(0); \r\n            } else if (cursorPosition > width) {\r\n                setInterfacePosition(`${width}`);\r\n            } else {\r\n                setInterfacePosition(cursorPosition);\r\n            }\r\n            console.log(cursorPosition);\r\n            setClipWidth(cursorPosition);\r\n            // console.log(`left pos: ${clipWidth}`);\r\n        }\r\n    }\r\n\r\n    // const handleMove = (e) => {\r\n    //     if(activeMoving) {\r\n    //         e.preventDefault();\r\n    //         const rect = componentRef.current.getBoundingClientRect();\r\n    //         const cursorPosition = e.clientX - rect.left;\r\n    //         // center = cursorPosition;\r\n    //         setInterfacePosition(`${cursorPosition}`);\r\n    //         setClipWidth(cursorPosition);\r\n    //         // console.log(`left pos: ${clipWidth}`);\r\n    //     }\r\n    // }\r\n\r\n    // const handleMouseDown = (e) => {\r\n    //     e.preventDefault();\r\n    //     setActiveMoving(true);\r\n    // }\r\n\r\n    // const handleMouseUp = (e) => {\r\n    //     e.preventDefault();\r\n    //     setActiveMoving(false);\r\n    // }\r\n\r\n        return (\r\n            <div className=\"example_back\" onTouchEnd={handleTouchEnd} onTouchMove={handleTouchMove} ref={componentRef}>\r\n                <img src={example1a} className=\"example_img1 before_img\" alt=\"Пример до\" style={{width: `${width}px`}}/>\r\n                <div className=\"example_front\" style={clipWidth === false ? {width: `${width/2}px`} : {width: `${clipWidth}px`}}>\r\n                <img src={example1b} className=\"example_img1 after_img\" alt=\"Пример после\" style={{width: `${width}px`}}/>\r\n                </div>\r\n                <div className=\"ex_show_interface\" onTouchStart={handleTouchStart}  style={interfacePosition === false ? { left: `${width/2}px`} : { left: `${interfacePosition}px`}}>\r\n                    <span className=\"left_arrow\"></span>\r\n                    <span className=\"right_arrow\"></span>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n}\r\nexport default ExampleImage;","import React, { useState, useEffect } from 'react';\r\nimport example1b from '../img/example1b.jpg';\r\nimport example1a from '../img/example1a.jpg';\r\nimport ExampleImage from './ExampleImage';\r\nimport ExampleImageNew from './ExampleImageNew';\r\n\r\nfunction Examples() {\r\n\r\n    useEffect(() => {\r\n        // window.onresize = function() {\r\n        //    console.log('work'); \r\n        // };\r\n    });\r\n\r\n    const [activeMoving, setActiveMoving] = useState(false);\r\n    const [interfacePosition, setInterfacePosition] = useState(\"50%\");\r\n\r\n    const handeMouseDown = (e) => {\r\n        setActiveMoving(true);\r\n    }\r\n\r\n    const handeMouseUp = (e) => {\r\n        setActiveMoving(false);\r\n    }\r\n\r\n    const handeMouseMove = (e) => {\r\n        if(activeMoving) {\r\n            let testX = e.clientX;\r\n            let margin = testX + \"px\";\r\n            console.log(margin);\r\n            setInterfacePosition(margin);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"examples_wraper\">\r\n        <h2>Примеры работ</h2>\r\n        <div className=\"examples_container\">\r\n            {/* <div className=\"example_show\">\r\n                <img src={example1b} className=\"example_img before_img\" alt=\"Пример до\"/>\r\n                <img src={example1a} className=\"example_img after_img\" alt=\"Пример после\"/>\r\n                <div className=\"ex_show_interface\" style={{ left: interfacePosition }}>\r\n                    <span className=\"left_arrow\"></span>\r\n                    <span className=\"right_arrow\"></span>\r\n                </div>\r\n            </div> */}\r\n            <ExampleImageNew />\r\n        </div>    \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Examples;","import React from 'react';\r\nimport Header from './components/Header';\r\nimport InfoCards from './components/InfoCards';\r\nimport Slider from './components/Slider';\r\nimport HowTo from './components/HowTo';\r\nimport Examples from './components/Examples';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/* <Header /> */}\r\n      {/* <InfoCards /> */}\r\n      {/* <Slider /> */}\r\n      <HowTo />\r\n      <Examples />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}